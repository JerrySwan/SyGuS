; Swap a character between positions a and b.(set-logic SLIA)(synth-fun f ((s String)(a Int)(b Int)) String    ((Start String (ntString))     (ntString String (s                       (str.++ ntString ntString)                       (str.replace ntString ntString ntString)                       (str.at ntString ntInt)                       (int.to.str ntInt)                       (str.substr ntString ntInt ntInt)))      (ntInt Int (0 1 2 a b                  (+ ntInt ntInt)                  (- ntInt ntInt)                  (str.len ntString)                  (str.to.int ntString)                  (str.indexof ntString ntString ntInt)))      (ntBool Bool (true false                    (str.prefixof ntString ntString)                    (str.suffixof ntString ntString)                    (str.contains ntString ntString)))))(declare-var |s'| String)(declare-var a Int)(declare-var b Int)(constraint (= (str.len (f |s'| a b)) (str.len |s'|)));(constraint (= (str.len (f |s'| a b)) (str.len |s'|)));(constraint (= (str.at (f |s'| a b) a) (str.at |s'| b)));(constraint (= (str.at (f |s| a b) b) (str.at |s| a)));(constraint (str.prefixof (f s a b) (str.substr s 0 a)));(constraint (str.suffixof (f s a b) (str.substr s (+ b 1) (- (str.len s) (+ b 1)))))(check-synth)