(set-logic LIA)

(synth-fun recfun ((a Int)) Int
    ((Start Int (a 0
        (+ Start Start)
        (- Start Start)
        (* Start Start)
        (^ Start Start)
        (ite StartBool Start Start)
        (recfun Start)))
     (StartBool Bool (
        (and StartBool StartBool)
        (or StartBool StartBool)
        (not StartBool)
        (> Start Start)
        (< Start Start)
        (= Start Start)))
    )
)


(declare-var a Int)

; recursive: T(n) = 2T(n-1) + 1
; (constraint (=> (= a 0) (= (recfun 0) 0)))
; (constraint (=> (> a 0) (= (recfun a) (* (+ (recfun (- a 1)) 1 ) 2))))
; closed form: T(n) = 2^n - 1, forall n >= 0
(constraint (= (recfun a) (- (^ 2 n) 1 ) ) )
(check-synth)
